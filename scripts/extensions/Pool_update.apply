#!/usr/bin/env python

import xmlrpclib, sys
import json
import urllib2
import xml
import subprocess
import os
import traceback
import XenAPI

def success_message(params):
    rpcparams = { 'Status': 'Success', 'Value': json.dumps(params) }
    return xmlrpclib.dumps((rpcparams, ), '', True)

def failure_message(code, params):
    rpcparams = { 'Status': 'Failure', 'ErrorDescription': json.dumps([ code ] + params) }
    return xmlrpclib.dumps((rpcparams, ), '', True)

def execute_apply(yum_url, update_package):
    # TODO: handle the error message, need structured message
    try:
        # TODO: Ensure the location.
        open('/tmp/apply.log', 'ab').write('%s %s\n' % (time.ctime(), update_package))
        FNULL = open(os.devnull, 'w')
        retcode = subprocess.call('yum -c ' + yum_url + ' install -y ' + update_package, shell=True, stdout = FNULL, stderr = FNULL)
        if retcode == 0:
            print (success_message("Apply passed."))
        else:
            print (failure_message("ApplyFailure", ["Apply failed."]))
    except Exception as e:
        print (failure_message('ApplyFailure', ['Exception: Apply failed: ' + str(e) + '\n' + traceback.format_exc()]))


if __name__ == '__main__':
    txt = sys.stdin.read()
    params, method = xmlrpclib.loads(txt)

    session = None
    try:
        session = XenAPI.xapi_local()
        session.xenapi.login_with_password('root', '', '', 'Pool_update')

        # Execute precheck first
        try:
            session.xenapi.pool_update.precheck(update, host)
        except Exception as e:
            print (failure_message('PrecheckFailure', ['Exception: Precheck failed: ' + str(e) + '\n' + traceback.format_exc()]))
        # TODO: How to parse if precheck pass or fail?

        # Precheck passed, start apply.
        open('/tmp/apply.log', 'ab').write('%s %s\n' % (time.ctime(), params))
        update = params[1]
        host = params[2]
        # attach and get the yum URL
        yum_url = session.xenapi.pool_update.attach(update, host)
        update_package = session.xenapi.pool_update.get_name_label(update)
        execute_apply(yum_url, update_package)

    except Exception as e:
        print (failure_message('ApplyFailure', ['Exception: Apply failed: ' + str(e) + '\n' + traceback.format_exc()]))
    finally:
        if session is not None:
            session.xenapi.pool_update.detach(update, host)
            session.xenapi.session.logout()
